app.controller('CheckoutCtrl', ['$scope', '$http', '$location', 'UserService', '$localStorage', 'URL_CONSTANTS', '$auth', function($scope, $http, $location, UserService, $localStorage, URL_CONSTANTS, $auth){



  $scope.deleteItem = function ($index) {
    $scope.deletedItem = $scope.checkoutList.splice($index, 1)
    //console.log
  };

  $scope.checkoutTotal = function () {
    $scope.total = 0;
    for (var i = 0; i < $scope.checkoutList.length; i++){
      $scope.total += $scope.checkoutList[i].price
    }
    return $scope.total;
  };

  $scope.braintreeForm = function () {
    $http.get(URL_CONSTANTS.domain + '/api/transactions/get_client_token').success(function(response){
      $scope.clientToken = response.key
      braintree.setup($scope.clientToken, 'dropin', {
        container: 'dropin-container',
        paymentMethodNonceReceived: function (event, nonce) {
          $scope.data = {
            amount: ($scope.total).toString(),
            payment_method_nonce: nonce
          };
          $http.post(URL_CONSTANTS.domain + '/api/transactions', $scope.data).then(function (resp){
            console.log(resp);
            $scope.createOrder();
          }, function (resp){
            console.log(resp)
          });
        }
      });
    });
  }; //close braintreeForm

  $scope.createOrder = function() {
    $scope.createOrderData = {
      preparing: false,
      ready: false,
      picked_up: false,
      user_id : $scope.userData.id,
      pick_up_time: $scope.selectedPickUpTime,
      pickup_code: Math.floor(1000 + Math.random() * 9000),
      products: $scope.checkoutList
    };
    $http.post(URL_CONSTANTS.domain + '/api/orders', $scope.createOrderData).then(function successCallback (resp){
      console.log(resp.data.id);
      $scope.orderId = resp.data.id;
      $scope.getOrderDetails($scope.orderId);
      $localStorage.$reset();
      $scope.loadingCheckout=false;
    }, function errorCallback (resp){
      console.log(resp)
    })
  };

  $scope.getOrderDetails = function (id){
    console.log("get order details")
    $http.get(URL_CONSTANTS.domain + '/api/order/products/'+id).then(function successCallback (resp){
      $scope.orderUser = resp.data.user
      $scope.orderOrder = resp.data.order
      $scope.orderPickUpTime = resp.data.order.pick_up_time
      $scope.orderOrderProducts = resp.data.order_products
      $scope.ordersummary = true

    }, function errorCallback(resp){
      console.log(resp)
    })
  };

  $scope.localTime = function () {
    var time = (new Date($scope.orderPickUpTime)).toString()
     return time.slice(0,time.indexOf("GMT"));
  };

  function round5(x) {
    if (x<60){
    return Math.ceil(x/5)*5;
    }else{return 0}
  };

  function minutePlus15(x, currentHour){
    x = x + 15;
    if (x>55){
      x = x - 60;
      return {minute: round5(x), hour: (currentHour+1)};
        ;
    }else{return {minute: x, hour: currentHour};}
  };

  function listOfTimes(currentHour, minuteRounded, flag){
    if(currentHour>=6){
      for(currentHour; currentHour<=21; currentHour++){
        if(flag){
          minuteRounded=0;
        };
        for(minuteRounded; minuteRounded<=55; minuteRounded = minuteRounded+5){
          var Minute = 0
          if (minuteRounded<=6){
            Minute = "0"+minuteRounded;
          }else{
            Minute = minuteRounded};
          var availableTime = currentHour+":"+Minute;
          $scope.timesArray.push(availableTime);
          flag = true;

        };
      };
    }
  }

  $scope.createTimes = function () {
    $scope.timesArray = []
    var flag = false;

    var currentTime = new Date();
    var currentHour = currentTime.getHours();
    var currentMinute = currentTime.getMinutes();
    var minuteRounded = (minutePlus15(round5(currentMinute), currentHour)).minute;
    currentHour = (minutePlus15(round5(currentMinute), currentHour)).hour;
    listOfTimes(currentHour, minuteRounded, flag);
  };

  $scope.showSelectedTime = function () {
    $scope.hourOfPickUp = parseInt($scope.pickedTime.slice(0,$scope.pickedTime.indexOf(":")))
    $scope.minuteOfPickUp = parseInt($scope.pickedTime.slice($scope.pickedTime.indexOf(":")+1))
    $scope.currentDate = new Date();
    $scope.selectedPickUpTime = new Date($scope.currentDate.setHours($scope.hourOfPickUp, $scope.minuteOfPickUp));
  };

  $scope.loadingOn = function () {
    $scope.loadingCheckout=true;
  }

  $scope.initCheckout = function () {
    $scope.message = "Checkout Page";
    $scope.userData = UserService.user;
    $scope.braintreeForm();
    $scope.checkoutList = $localStorage.checkoutList;
    $scope.ordersummary = false;
    $scope.createTimes();
    $scope.loadingCheckout=false;
  };


  $scope.adminCheckFirst = function () {
    if ($auth.user.admin){
      $location.path('order_dashboard')
    }else{
      $scope.initCheckout();
    }
  };
  $scope.adminCheckFirst();


}]);