app.controller('HeaderCtrl', ['$scope', '$auth', '$http', 'UserService', '$window', '$document', '$location', '$localStorage', 'Notification', 'URL_CONSTANTS', function($scope, $auth, $http, UserService, $window, $document, $location, $localStorage, Notification, URL_CONSTANTS){

  window.$auth = $auth;

  $scope.getUserdetails = function () {
    $http.get(URL_CONSTANTS.domain + '/api/user/').then(function successCallback (resp){
      $scope.userInfo = resp.data
    }, function errorCallback(resp){
      console.log(resp)
    })
    $http.get(URL_CONSTANTS.domain + '/api/user_orders').then(function successCallback (resp){
      $scope.orderHistory = resp.data
      console.log($scope.orderHistory);
    }, function errorCallback(resp){
      console.log(resp)
    })

  };

  $scope.login = function () {
    $auth.submitLogin($scope.loginForm).
    then(function(resp) {
      console.log(resp);
      if ($auth.user.admin) {
        $location.path("order_dashboard")
      }else (Notification.success("You have successfully logged in"));
    }).catch(function(resp) {
      console.log(resp);
      Notification.error('Incorrect password or email')
    });
  };

  $scope.signup = function () {
    $auth.submitRegistration($scope.registrationForm).
    then(function(resp) {
      Notification.success("You have successfully signed in");
    }).catch(function(resp) {
      Notification.error('Invalid email or password');
    });
  };

  $scope.documentScrollNav = function () {
    $document.on('scroll', function() {
      // do your things like logging the Y-axis
      if ($window.scrollY > (window.innerHeight)*.25){
        $scope.transparentNav = false
      }else {
        $scope.transparentNav = true;
      }
      $scope.$apply();
    });
  };

  $scope.initCheckoutList = function () {
    $scope.checkoutList = [];
    $scope.checkoutList = $localStorage.checkoutList
    if (!$scope.checkoutList){
      $scope.checkoutList=[]
    }else {
      $scope.expirationTime = localStorage.expirationTime;
      // console.log($scope.expirationTime);
      $scope.currentTime = new Date();
      $scope.currentHour = $scope.currentTime.getTime();
      console.log($scope.expirationTime - $scope.currentHour)
      console.log($scope.checkoutList);
      if ($scope.expirationTime < $scope.currentHour){
        $localStorage.$reset();
        $scope.checkoutList = [];
      };
    }
  };

  $scope.saveCheckoutList = function () {
    $localStorage.checkoutList = $scope.checkoutList;
    $scope.currentTime = new Date();
    $scope.currentHour = $scope.currentTime.getTime();
    $scope.expirationTime = $scope.currentHour + (3*60*60*1000);
    localStorage.expirationTime = $scope.expirationTime;
  };

  $scope.checkoutTotal = function () {
    var total = 0;
    for (var i = 0; i < $scope.checkoutList.length; i++){
      total += $scope.checkoutList[i].price
    }
    return total;
  };

  $scope.checkoutLength = function () {
    return $scope.checkoutList.length
    //console
  };

  $scope.deleteItem = function($index){
    $scope.deletedItem = $scope.checkoutList.splice($index, 1);
    console.log("item that was deleted")
    console.log($scope.deletedItem)
    console.log("items left in checkoutList")
    console.log($scope.checkoutList)
  };

  $scope.logout = function () {
    $auth.signOut().then(function(resp) {
      Notification.success("You have successfully logged out");
    }).catch(function(resp) {
      Notification.error('Log out unsuccessful')
    });
  };

  $scope.modalRedirect = function (x) {
    $location.path(x)
  };


  $scope.localTime = function (x) {
    var time = (new Date(x)).toString()
     return time.slice(0,time.indexOf("GMT"));
  };

  $scope.show = function () {
    $scope.showme = true;
    $scope.showing = true;
  };
  $scope.showMe = function () {
    $scope.showme = false;
    $scope.showing = false;
  };


  $scope.initHeader = function () {
    $scope.transparentNav = true
    $scope.documentScrollNav();
    $scope.initCheckoutList();
    $scope.getUserdetails();
    $scope.showme = false
  };

  $scope.initHeader();

}]);